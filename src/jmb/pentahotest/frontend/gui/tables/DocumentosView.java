package jmb.pentahotest.frontend.gui.tables;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import jmb.pentahotest.backend.controller.NumberRenderer;
import jmb.pentahotest.backend.controller.objects.Documento;
import jmb.pentahotest.backend.controller.objects.Lineas;
import jmb.pentahotest.backend.model.QueryManager;
import jmb.pentahotest.frontend.gui.PentahoTestView;

/**
 *
 * @author jmbalbas
 */
public class DocumentosView extends javax.swing.JDialog {

    /**
     * Creates new form DocumentoView
     * @param parent
     * @param modal
     * @param id
     */
    public DocumentosView(javax.swing.JDialog parent, boolean modal, String id) {
        super(parent, modal);
        initComponents();
        initComponents2(id);
    }
    
    /**
     * Creates new form DocumentoView
     * @param parent
     * @param modal
     * @param id
     */
    public DocumentosView(javax.swing.JFrame parent, boolean modal, String id) {
        super(parent, modal);
        initComponents();
        initComponents2(id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNumeracion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldFecha = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextFieldHora = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxEmpresas = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxClientes = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLineas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldImporteBase = new javax.swing.JTextField();
        jTextFieldImporteDto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldImporteIva = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabelImporteTotal = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldFormaPago = new javax.swing.JTextField();
        jTextFieldPorcentajeIva = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaObservaciones = new javax.swing.JTextArea();
        jButtonCancelar = new javax.swing.JButton();
        jButtonGrabarRegistro = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxTipos = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabelTotalNeto = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelTotalDto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Id:");

        jTextFieldId.setEnabled(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Numeración:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Fecha:");

        jFormattedTextFieldFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldFechaFocusGained(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Hora:");

        jFormattedTextFieldHora.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHoraFocusGained(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Empresa:");

        jComboBoxEmpresas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Cliente:");

        jComboBoxClientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setPreferredSize(new java.awt.Dimension(735, 289));

        jTableLineas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lín.", "Referencia", "Descripción", "Cant.", "Precio Unitario", "% Dto.", "Neto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLineas.setRowHeight(20);
        jScrollPane1.setViewportView(jTableLineas);
        if (jTableLineas.getColumnModel().getColumnCount() > 0) {
            jTableLineas.getColumnModel().getColumn(0).setMinWidth(30);
            jTableLineas.getColumnModel().getColumn(0).setMaxWidth(30);
            jTableLineas.getColumnModel().getColumn(2).setMinWidth(250);
            jTableLineas.getColumnModel().getColumn(3).setMinWidth(50);
            jTableLineas.getColumnModel().getColumn(3).setMaxWidth(50);
            jTableLineas.getColumnModel().getColumn(5).setMinWidth(50);
            jTableLineas.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Líneas", jPanel1);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Importe Base:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Importe Dtos.:");

        jTextFieldImporteBase.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldImporteBase.setText("0,00");
        jTextFieldImporteBase.setEnabled(false);

        jTextFieldImporteDto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldImporteDto.setText("0,00");
        jTextFieldImporteDto.setEnabled(false);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("% I.V.A.:");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Importe I.V.A.:");

        jTextFieldImporteIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldImporteIva.setText("0,00");
        jTextFieldImporteIva.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Importe Total:");

        jLabelImporteTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelImporteTotal.setForeground(java.awt.Color.blue);
        jLabelImporteTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelImporteTotal.setText("0,00");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Forma Pago:");

        jTextFieldPorcentajeIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPorcentajeIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPorcentajeIvaFocusLost(evt);
            }
        });
        jTextFieldPorcentajeIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPorcentajeIvaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldImporteDto)
                    .addComponent(jTextFieldImporteBase, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldImporteIva, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(jTextFieldPorcentajeIva))
                .addGap(10, 10, 10)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabelImporteTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                    .addComponent(jTextFieldFormaPago))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldImporteBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16)
                    .addComponent(jTextFieldFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPorcentajeIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldImporteDto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldImporteIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabelImporteTotal))
                .addGap(66, 66, 66))
        );

        jTabbedPane1.addTab("Totales", jPanel3);

        jTextAreaObservaciones.setColumns(20);
        jTextAreaObservaciones.setRows(5);
        jScrollPane3.setViewportView(jTextAreaObservaciones);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("Observaciones", jPanel2);

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonGrabarRegistro.setText("Grabar registro");
        jButtonGrabarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGrabarRegistroActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Tipo:");

        jComboBoxTipos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Total Neto:");

        jLabelTotalNeto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTotalNeto.setForeground(java.awt.Color.blue);
        jLabelTotalNeto.setText("0,00");

        jLabel9.setText("Total Dto.:");

        jLabelTotalDto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTotalDto.setForeground(java.awt.Color.blue);
        jLabelTotalDto.setText("0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxEmpresas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxTipos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextFieldFecha))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldNumeracion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10)
                        .addComponent(jLabelTotalNeto, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addGap(10, 10, 10)
                        .addComponent(jLabelTotalDto, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonGrabarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxEmpresas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNumeracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jFormattedTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancelar)
                        .addComponent(jButtonGrabarRegistro))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabelTotalNeto)
                        .addComponent(jLabel9)
                        .addComponent(jLabelTotalDto)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFormattedTextFieldFechaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldFechaFocusGained
         if (jFormattedTextFieldFecha.getText().equals("  /  /    ")) {
            Date date = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");
            jFormattedTextFieldFecha.setText(simpleDateFormat.format(date));
        }
        jFormattedTextFieldFecha.setSelectionStart(0);
        jFormattedTextFieldFecha.setSelectionEnd(jFormattedTextFieldFecha.getText().length());
    }//GEN-LAST:event_jFormattedTextFieldFechaFocusGained

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jFormattedTextFieldHoraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHoraFocusGained
        if (jFormattedTextFieldHora.getText().equals("  :  ")) {
            Date date = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("hh:mm");
            jFormattedTextFieldHora.setText(simpleDateFormat.format(date));
        }
        jFormattedTextFieldHora.setSelectionStart(0);
        jFormattedTextFieldHora.setSelectionEnd(jFormattedTextFieldHora.getText().length());
    }//GEN-LAST:event_jFormattedTextFieldHoraFocusGained

    private void jButtonGrabarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGrabarRegistroActionPerformed
        if (!jFormattedTextFieldFecha.getText().equals("  /  /    ") && !jFormattedTextFieldHora.getText().equals("  :  ") && !jComboBoxTipos.getSelectedItem().toString().equals("Seleccione tipo...") && !jComboBoxEmpresas.getSelectedItem().toString().equals("Seleccione empresa...") && !jComboBoxClientes.getSelectedItem().toString().equals("Seleccione cliente...")) {
            // Documento
            documento.setNumeracion((!jTextFieldNumeracion.getText().equals("")) ? jTextFieldNumeracion.getText() : "");
            documento.setFecha(jFormattedTextFieldFecha.getText());
            documento.setHora(jFormattedTextFieldHora.getText());
            String tipo = jComboBoxTipos.getSelectedItem().toString();
            String[] idTipo = tipo.split("-");
            documento.setTipo(Integer.valueOf(idTipo[0]));
            String empresa = jComboBoxEmpresas.getSelectedItem().toString();
            String[] idEmpresa = empresa.split("-");
            documento.setEmpresa(Integer.valueOf(idEmpresa[0]));
            String cliente = jComboBoxClientes.getSelectedItem().toString();
            String[] idCliente = cliente.split("-");
            documento.setCliente(Integer.valueOf(idCliente[0]));
            documento.setObservaciones((!jTextAreaObservaciones.getText().equals("")) ? jTextAreaObservaciones.getText() : "");
            documento.setImporteBase((!jTextFieldImporteBase.getText().equals("")) ? Double.valueOf(jTextFieldImporteBase.getText().replace(',', '.')) : 0.0);
            documento.setImporteDescuento((!jTextFieldImporteDto.getText().equals("")) ? Double.valueOf(jTextFieldImporteDto.getText().replace(',', '.')) : 0.0);
            documento.setPorcentajeIva((!jTextFieldPorcentajeIva.getText().equals("")) ? Double.valueOf(jTextFieldPorcentajeIva.getText().replace(',', '.')) : 0.0);
            documento.setImporteCuota((!jTextFieldImporteIva.getText().equals("")) ? Double.valueOf(jTextFieldImporteIva.getText().replace(',', '.')) : 0.0);
            documento.setImporteTotal((!jLabelImporteTotal.getText().equals("")) ? Double.valueOf(jLabelImporteTotal.getText().replace(',', '.')) : 0.0);
            documento.setFormaPago((!jTextFieldFormaPago.getText().equals("")) ? jTextFieldFormaPago.getText() : "");
            
            // Líneas
            ArrayList<Integer> id = new ArrayList();
            ArrayList<Integer> contador = new ArrayList();
            ArrayList<String> referencia = new ArrayList();
            ArrayList<String> descripcion = new ArrayList();
            ArrayList<Double> cantidad = new ArrayList();
            ArrayList<Double> precioUnitario = new ArrayList();
            ArrayList<Double> porcentajeDto = new ArrayList();
            ArrayList<Double> importeBruto = new ArrayList();
            ArrayList<Double> importeDto = new ArrayList();
            ArrayList<Double> importeNeto = new ArrayList();
            int contadorReal = 1;
            for (int i = 0; i < modeloLineas.getRowCount(); i++) {
                if (modeloLineas.getValueAt(i, 2) != null) {
                    id.add(lineas.getNextId() + i);
                    contador.add(contadorReal);
                    referencia.add((modeloLineas.getValueAt(i, 1) != null) ? (String) modeloLineas.getValueAt(i, 1) : "");
                    descripcion.add((modeloLineas.getValueAt(i, 2) != null) ? (String) modeloLineas.getValueAt(i, 2) : "");
                    cantidad.add((modeloLineas.getValueAt(i, 3) != null) ? Double.valueOf(modeloLineas.getValueAt(i, 3).toString().replace(',', '.')) : 0.0);
                    precioUnitario.add((modeloLineas.getValueAt(i, 4) != null) ? Double.valueOf(modeloLineas.getValueAt(i, 4).toString().replace(',', '.')) : 0.0);
                    porcentajeDto.add((modeloLineas.getValueAt(i, 5) != null) ? Double.valueOf(modeloLineas.getValueAt(i, 5).toString().replace(',', '.')) : 0.0);
                    importeBruto.add(cantidad.get(i) * precioUnitario.get(i));
                    importeDto.add(((cantidad.get(i) * precioUnitario.get(i)) * porcentajeDto.get(i)) / 100);
                    importeNeto.add((modeloLineas.getValueAt(i, 6) != null) ? Double.valueOf(modeloLineas.getValueAt(i, 6).toString().replace(',', '.')) : 0.0);
                    contadorReal++;
                }
            }
            lineas.setId(id);
            lineas.setContador(contador);
            lineas.setReferencia(referencia);
            lineas.setDescripcion(descripcion);
            lineas.setCantidad(cantidad);
            lineas.setPrecioUnitario(precioUnitario);
            lineas.setPorcentajeDto(porcentajeDto);
            lineas.setImporteBruto(importeBruto);
            lineas.setImporteDto(importeDto);
            lineas.setImporteNeto(importeNeto);
            lineas.setDocumento(documento.getId());
            
            if (newReg) {
                if (documento.insert() && lineas.insert()) {
                    JOptionPane.showMessageDialog(this, "Registro grabado correctamente", "Documentos", 1);
                    dispose();
                }
            } else {
                if (documento.update() && lineas.update()) {
                    JOptionPane.showMessageDialog(this, "Registro actualizado correctamente", "Documentos", 1);
                    dispose();
                }
            }
        }
    }//GEN-LAST:event_jButtonGrabarRegistroActionPerformed

    private void jTextFieldPorcentajeIvaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPorcentajeIvaFocusLost
        if (!jTextFieldPorcentajeIva.getText().equals("")) {
            jTextFieldPorcentajeIva.setText(String.format("%.2f", Double.valueOf(jTextFieldPorcentajeIva.getText().replace(',', '.'))));
            jTextFieldImporteIva.setText(String.format("%.2f", (totalNeto * Double.valueOf(jTextFieldPorcentajeIva.getText().replace(',', '.'))) / 100));
            jLabelImporteTotal.setText(String.format("%.2f", totalNeto + Double.valueOf(jTextFieldImporteIva.getText().replace(',', '.'))));
        } else {
            jTextFieldImporteIva.setText("0,00");
            jLabelImporteTotal.setText(jTextFieldImporteBase.getText());
        }
    }//GEN-LAST:event_jTextFieldPorcentajeIvaFocusLost

    private void jTextFieldPorcentajeIvaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPorcentajeIvaKeyReleased
        try {
            int x = Integer.parseInt(jTextFieldPorcentajeIva.getText());
        } catch (NumberFormatException ex) {
            jTextFieldPorcentajeIva.setText("");
        }
    }//GEN-LAST:event_jTextFieldPorcentajeIvaKeyReleased

    private void initComponents2(String id) {
        setTitle((!id.equals("")) ? "Editar Registro [Documentos]" : "Nuevo Registro [Documentos]");
        setLocationRelativeTo(null);
        
        /**********************************************************************/
        /*                                COMUN                               */
        /**********************************************************************/
        
        documento = new Documento();
        lineas = new Lineas();
        
        modeloLineas = (DefaultTableModel) jTableLineas.getModel();
        
        // Vaciamos combos (Tipos, Empresas y Clientes)
        jComboBoxTipos.removeAllItems();
        jComboBoxEmpresas.removeAllItems();
        jComboBoxClientes.removeAllItems();
        
        // Asignamos formatos para los campos Fecha (dd/MM/yyyy), Hora (mm:hh) y Porcentaje de IVA ("#,##")
        try {
            jFormattedTextFieldFecha.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("##/##/####")));
            jFormattedTextFieldHora.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("##:##")));
        } catch (ParseException ex) {
            Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Formato de dos decimales a los campos numéricos de la tabla
        NumberFormat format = NumberFormat.getInstance();
        jTableLineas.getColumnModel().getColumn(3).setCellRenderer(new NumberRenderer(format));
        jTableLineas.getColumnModel().getColumn(4).setCellRenderer(new NumberRenderer(format));
        jTableLineas.getColumnModel().getColumn(5).setCellRenderer(new NumberRenderer(format));
        jTableLineas.getColumnModel().getColumn(6).setCellRenderer(new NumberRenderer(format));
        
        // Se agrega TableModelListener para controlar las líneas
        jTableLineas.getModel().addTableModelListener(new TableModelListener() {
            //Sobreescribimos el métedo tableChanged para controlar cuando hay que agregar una nueva fila
            @Override
            public void tableChanged(TableModelEvent evento) {
                if(evento.getType() == TableModelEvent.UPDATE) {
                    if (modeloLineas.getValueAt(modeloLineas.getRowCount() - 1, 2) != null) {
                        // Se agrega una nueva fila en blanco
                        Object[] nuevaFila = new Object[7];
                        nuevaFila[0] = modeloLineas.getRowCount() + 1;
                        nuevaFila[1] = null;
                        nuevaFila[2] = null;
                        nuevaFila[3] = null;
                        nuevaFila[4] = null;
                        nuevaFila[5] = null;
                        nuevaFila[6] = null;
                        modeloLineas.addRow(nuevaFila);
                    }
                }
                
                if (evento.getColumn() == 3 || evento.getColumn() == 4 || evento.getColumn() == 5) {
                    double cantidad = modeloLineas.getValueAt(jTableLineas.getEditingRow(), 3) != null ? (double) modeloLineas.getValueAt(jTableLineas.getEditingRow(), 3) : 0.0;
                    double precio = modeloLineas.getValueAt(jTableLineas.getEditingRow(), 4) != null ? (double) modeloLineas.getValueAt(jTableLineas.getEditingRow(), 4) : 0.0;
                    double dto = modeloLineas.getValueAt(jTableLineas.getEditingRow(), 5) != null ? (double) modeloLineas.getValueAt(jTableLineas.getEditingRow(), 5) : 0.0;
                    double neto =  cantidad * precio;
                    neto -= (dto > 0) ? (dto / 100) * neto : 0.0;
                    modeloLineas.setValueAt(neto, jTableLineas.getEditingRow(), 6);
                    
                    // Inicializamos variables que acumulan los importes totales
                    totalNeto = 0.0;
                    totalDtos = 0.0;                    
                    for (int i = 0; i < modeloLineas.getRowCount(); i++) {
                        if (modeloLineas.getValueAt(i, 6) != null) {
                            totalNeto += (double) modeloLineas.getValueAt(i, 6);
                            if (modeloLineas.getValueAt(i, 3) != null && modeloLineas.getValueAt(i, 4) != null && modeloLineas.getValueAt(i, 5) != null) {
                                if ((double) modeloLineas.getValueAt(i, 5) > 0.0 &&  (double) modeloLineas.getValueAt(i, 5) < 100.0) {
                                    totalDtos += ((double) modeloLineas.getValueAt(i, 5) * ((double) modeloLineas.getValueAt(i, 3) * (double) modeloLineas.getValueAt(i, 4))) / 100;
                                } else {
                                    if ((double) modeloLineas.getValueAt(i, 5) == 0.0) totalDtos += 0.0;
                                    if ((double) modeloLineas.getValueAt(i, 5) == 100.0) totalDtos += (double) modeloLineas.getValueAt(i, 3) * (double) modeloLineas.getValueAt(i, 4);
                                }
                            } else {
                                totalDtos += 0.0;
                            }
                        }
                    }                    
                    jLabelTotalNeto.setText(String.format("%.2f", totalNeto));
                    jLabelTotalDto.setText(String.format("%.2f", totalDtos));
                    
                    // Solapa de Totales
                    jTextFieldImporteBase.setText(String.format("%.2f", totalNeto));
                    jTextFieldImporteDto.setText(String.format("%.2f", totalDtos));
                    if (!jTextFieldPorcentajeIva.getText().equals("")) {
                        jTextFieldImporteIva.setText(String.format("%.2f", (totalNeto * Double.valueOf(jTextFieldPorcentajeIva.getText().replace(',', '.'))) / 100));
                        jLabelImporteTotal.setText(String.format("%.2f", totalNeto + Double.valueOf(jTextFieldImporteIva.getText().replace(',', '.'))));
                    } else {
                        jLabelImporteTotal.setText(jTextFieldImporteBase.getText());
                    }
                }
            }
        });
        
        // Inicializamos variables que acumulan los importes totales
        totalNeto = 0.0;
        totalDtos = 0.0;

        // Nuevo gestor de consultas
        QueryManager queryManager = new QueryManager();
        
        /**********************************************************************/
        /*                           EDITAR / NUEVO                           */
        /**********************************************************************/

        if (!id.equals("")) {
            newReg = false;
            jTextFieldId.setText(id);
            documento.setId(Integer.valueOf(id));
            lineas.setDocumento(documento.getId());
            documento = documento.select();
            lineas = lineas.select();            
            // Rellenamos combo Tipos con el tipo del documento
            resultSet = queryManager.execute("select id, descripcion from Tipos where id = " + documento.getTipo() + ";");
            try {
                while (resultSet.next()) {
                    jComboBoxTipos.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }            
            // Rellenamos combo Empresas con la empresa del documento
            resultSet = queryManager.execute("select id, nombre from Empresas where id = " + documento.getEmpresa() + ";");
            try {
                while (resultSet.next()) {
                    jComboBoxEmpresas.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }            
            // Rellenamos combo Clientes con el cliente del documento
            resultSet = queryManager.execute("select id, nombre, apellidos from Clientes where id = " + documento.getCliente() + ";");
            try {
                while (resultSet.next()) {
                    jComboBoxClientes.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2) + " " + resultSet.getString(3));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }            
            // Numeración
            jTextFieldNumeracion.setText(documento.getNumeracion());            
            // Fecha
            String fecha = String.valueOf(documento.getFecha());
            jFormattedTextFieldFecha.setText(fecha);            
            // Hora
            jFormattedTextFieldHora.setText(documento.getHora());
            // Forma de pago
            jTextFieldFormaPago.setText(documento.getFormaPago());
            // Observaciones
            jTextAreaObservaciones.setText(documento.getObservaciones());
            // Importes y Totales
            jLabelTotalNeto.setText(String.format("%.2f", documento.getImporteBase()));
            jLabelTotalDto.setText(String.format("%.2f", documento.getImporteDescuento()));
            jTextFieldImporteBase.setText(String.format("%.2f", documento.getImporteBase()));
            jTextFieldImporteDto.setText(String.format("%.2f", documento.getImporteDescuento()));
            jTextFieldPorcentajeIva.setText(String.format("%.2f", documento.getPorcentajeIva()));
            jTextFieldImporteIva.setText(String.format("%.2f", documento.getImporteCuota()));
            jLabelImporteTotal.setText(String.format("%.2f", documento.getImporteTotal()));                    
            
            // Líneas
            Object[] nuevaFila = new Object[7];
            for (int i = 0; i < lineas.getId().size(); i++) {
                nuevaFila[0] = lineas.getContador().get(i);
                nuevaFila[1] = lineas.getReferencia().get(i);
                nuevaFila[2] = lineas.getDescripcion().get(i);
                nuevaFila[3] = lineas.getCantidad().get(i);
                nuevaFila[4] = lineas.getPrecioUnitario().get(i);
                nuevaFila[5] = lineas.getPorcentajeDto().get(i);
                nuevaFila[6] = lineas.getImporteNeto().get(i);
                modeloLineas.addRow(nuevaFila);
            }
        } else {
            newReg = true;
            jTextFieldId.setText(String.valueOf(documento.getNextId()));
            documento.setId(Integer.valueOf(jTextFieldId.getText()));

            // Rellenamos combo Tipos
            jComboBoxTipos.addItem("Seleccione tipo...");
            resultSet = queryManager.execute("select id, descripcion from Tipos order by id asc;");
            try {
                while (resultSet.next()) {
                    jComboBoxTipos.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Rellenamos combo Empresas
            jComboBoxEmpresas.addItem("Seleccione empresa...");
            resultSet = queryManager.execute("select id, nombre from Empresas order by id asc;");
            try {
                while (resultSet.next()) {
                    jComboBoxEmpresas.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Rellenamos combo Clientes
            jComboBoxClientes.addItem("Seleccione cliente...");
            resultSet = queryManager.execute("select id, nombre, apellidos from Clientes order by id asc;");
            try {
                while (resultSet.next()) {
                    jComboBoxClientes.addItem(String.valueOf(resultSet.getInt(1)) + "-" + resultSet.getString(2) + " " + resultSet.getString(3));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PentahoTestView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            // Agregamos una fila en blanco
            Object[] nuevaFila = new Object[7];
            modeloLineas.addRow(nuevaFila);
            modeloLineas.setValueAt("1", 0, 0);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGrabarRegistro;
    private javax.swing.JComboBox jComboBoxClientes;
    private javax.swing.JComboBox jComboBoxEmpresas;
    private javax.swing.JComboBox jComboBoxTipos;
    private javax.swing.JFormattedTextField jFormattedTextFieldFecha;
    private javax.swing.JFormattedTextField jFormattedTextFieldHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelImporteTotal;
    private javax.swing.JLabel jLabelTotalDto;
    private javax.swing.JLabel jLabelTotalNeto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableLineas;
    private javax.swing.JTextArea jTextAreaObservaciones;
    private javax.swing.JTextField jTextFieldFormaPago;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldImporteBase;
    private javax.swing.JTextField jTextFieldImporteDto;
    private javax.swing.JTextField jTextFieldImporteIva;
    private javax.swing.JTextField jTextFieldNumeracion;
    private javax.swing.JTextField jTextFieldPorcentajeIva;
    // End of variables declaration//GEN-END:variables

    private Documento documento;
    private Lineas lineas;
    private boolean newReg;
    private DefaultTableModel modeloLineas;
    private ResultSet resultSet;
    private double totalNeto;
    private double totalDtos;
}
